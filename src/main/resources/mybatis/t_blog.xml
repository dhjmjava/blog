<?xml version="1.0" encoding="UTF-8" ?>  <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.blog.mapper.BlogMapper">    <sql id="blogAttrs">      id,title,content,publish_time,author,keyword,is_use,blog_type,read_count    </sql>        <sql id="indexBlog">      id,title,content    </sql>          <select id="getAll"  resultType="com.blog.entity.Blog">      select <include refid="indexBlog"/> from t_blog    </select>    	<select id="getAllBlog" parameterType="map" resultType="com.blog.entity.Blog">	   select <include refid="blogAttrs"/> from t_blog order by publish_time desc limit #{params.offset},#{params.limit} 	</select>		<resultMap id="resultMap" type="com.blog.entity.Blog" >		<result property="id" column="id" />		<result property="title" column="title" />		<result property="content" column="content" />		<result property="publish_time" column="publish_time" />		<result property="keyword" column="keyword" />		<result property="is_use" column="is_use" />		<result property="blog_type" column="blog_type" />		<result property="read_count" column="read_count" />	</resultMap>		<select id="getBlogPage" resultType="list" resultMap="resultMap" parameterType="map">	   select * from t_blog where 1=1	    <if test="params != null">           <if test="params.blog_type != null and params.blog_type != '' and params.blog_type != -1 ">             and   blog_type = #{params.blog_type}            </if>           <if test="params.startTime != null and params.startTime != ''">             and publish_time between #{params.startTime} and #{params.endTime}           </if> 	     order by publish_time desc limit #{params.currPage},#{params.pageSize}        </if> 	</select>		<select id="getblogCount" resultType="int">	  select count(1) from t_blog where 1=1	  <if test="params != null">	       <if test="params.blog_type != null and params.blog_type != '' and params.blog_type != -1 ">             and   blog_type = #{params.blog_type}            </if>           <if test="params.startTime != null and params.startTime != ''">             and publish_time between #{params.startTime} and #{params.endTime}           </if>       </if>	</select>		<resultMap type="Blog" id="commentsMap">	    <id column="id" property="id"/>		<result property="title" column="title" />		<result property="content" column="content" />		<result property="publish_time" column="publish_time" />		<result property="keyword" column="keyword" />		<result property="is_use" column="is_use" />		<result property="blog_type" column="blog_type" />		<result property="read_count" column="read_count" />				<collection property="comments" column="blog_id" ofType="BlogComments">		    <id column="id" property="id"/>			<result column="ip" property="ip"/>			<result column="content" property="content"/>			<result column="comment_time" property="comment_time"/>			<result column="blog_id" property="blog_id"/>			<result column="is_use" property="is_use"/>					</collection>	</resultMap>		<select id="getBlogById" parameterType="long" resultType="com.blog.entity.Blog">	   SELECT * FROM t_blog WHERE id = #{id}	</select>		<delete id="deleteBlog" parameterType="long">	    delete from t_blog where id=#{id}	</delete>		<insert id="saveBlog" parameterType="com.blog.entity.Blog">	  insert into t_blog(title,publish_time,author,content,is_use,keyword,blog_type,read_count)	  values(#{title},#{publish_time},#{author},#{content},#{is_use},#{keyword},#{blog_type},#{read_count})	</insert>		<update id="updateBlog" parameterType="com.blog.entity.Blog">	    update t_blog set title=#{title},author=#{author},publish_time=#{publish_time}	    ,content=#{content},is_use=#{is_use},keyword=#{keyword},blog_type=#{blog_type},read_count=#{read_count} where id=#{id}	</update>		<resultMap type="com.blog.entity.Blog" id="dateMap">	   <result property="id" column="id"/>	   <result property="blogCount" column="blogCount" />	   <result property="months" column="months" />	</resultMap>		<select id="getBlogByDate" resultType="list" resultMap="dateMap">	    select id, DATE_FORMAT(publish_time,'%Y-%m') months,count(1) blogCount from t_blog group by months order by months desc ;  	</select>		<resultMap type="com.blog.entity.Blog" id="typeMap">	     <result property="typeCount" column="typeCount"/>	     <result property="blog_type" column="blog_type"/>	     <result property="name" column="name"/>	</resultMap>		<select id="getBlogByType" resultType="list" resultMap="typeMap">	    select tbt.`name` as `name`, tb.blog_type, count(1) as typeCount from t_blog tb join t_blog_types tbt where tb.blog_type=tbt.id group by blog_type;	</select>		<select id="getBlogByComments" resultType="com.blog.entity.Blog">	    select DISTINCT tb.id as id ,tb.title as title ,tb.publish_time as publish_time from t_blog_comments tbc LEFT JOIN t_blog tb on tbc.blog_id=tb.id 	</select>	 </mapper>  